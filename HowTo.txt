-------------------- Build Dom0 ---------------------------------------------------
---- Automatic install from CentOS 6.4 ------
-- http://wiki.centos.org/HowTos/Xen/Xen4QuickStart --
Install CentOS 6.x from Live CD.
yum update
yum install centos-release-xen
yum install xen
/usr/bin/grub-bootxen.sh

yum install libvirt
yum install python-virtinst
yum install postgresql postgresql-server postgresql-contrib
pgbench --version
       pgbench (PostgreSQL) 8.4.13

su - postgres
echo $PGDATA
       /var/lib/pgsql/data

----- Configure PG for the test size data -----
initdb
 SHARED_BUFFERS="256MB"
 WAL_BUFFERS="16MB"
 CHECKPOINT_SEGMENTS="16"
 echo \# Changes for pgbench testing >> $PGDATA/postgresql.conf
 echo shared_buffers=$SHARED_BUFFERS >> $PGDATA/postgresql.conf
 echo wal_buffers=$WAL_BUFFERS >> $PGDATA/postgresql.conf
 echo checkpoint_segments=$CHECKPOINT_SEGMENTS >> $PGDATA/postgresql.conf
pg_ctl start 

[root@Wall-eve ~]# xm info
host                   : Wall-eve.cs.pdx.edu
release                : 3.10.29-11.el6.centos.alt.x86_64
version                : #1 SMP Tue Feb 11 22:00:02 UTC 2014
machine                : x86_64
nr_cpus                : 16
nr_nodes               : 2
cores_per_socket       : 4
threads_per_core       : 2
cpu_mhz                : 2261
hw_caps                : bfebfbff:28100800:00000000:00003b40:009ce3bd:00000000:00000001:00000000
virt_caps              : hvm
total_memory           : 12278
free_memory            : 11113
free_cpus              : 0
xen_major              : 4
xen_minor              : 2
xen_extra              : .3-28.el6
xen_caps               : xen-3.0-x86_64 xen-3.0-x86_32p hvm-3.0-x86_32 hvm-3.0-x86_32p hvm-3.0-x86_64 
xen_scheduler          : credit
xen_pagesize           : 4096
platform_params        : virt_start=0xffff800000000000
xen_changeset          : unavailable
xen_commandline        : dom0_mem=1024M,max:1024M loglvl=all guest_loglvl=all
cc_compiler            : gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-4)
cc_compile_by          : mockbuild
cc_compile_domain      : centos.org
cc_compile_date        : Tue Feb 11 20:23:20 UTC 2014
xend_config_format     : 4

[root@Wall-eve ~]# free
             total       used       free     shared    buffers     cached
Mem:        945872     322420     623452          0      26760     112456
-/+ buffers/cache:     183204     762668
Swap:      6160380          0    6160380

[root@Wall-eve ~]# virsh net-list
Name                 State      Autostart
-----------------------------------------
xenNet               active     no      

-------------------- Build DomU ---------------------------------------------------
virt-install -d -n TestVM1 -r 2048 --vcpus=1 --disk /var/lib/libvirt/images/TestVM1.img,size=8 --nographics -p -l "http://mirror.centos.org/centos/6/os/x86_64" --network="network=xenNet" --extra-args="text console=com1 utf8 console=hvc0"

virt-install -d -n TestVM1 -r 2048 --vcpus=1 --disk /var/lib/libvirt/images/TestVM1.img,size=8 --nographics -p -l "http://mirror.centos.org/centos/6/os/x86_64" --extra-args="text console=com1 utf8 console=hvc0"

virt-install -d -n TestVM1 -r 512 --vcpus=1 --disk /var/lib/libvirt/images/TestVM1.img,size=8 --nographics -p -l "http://mirror.centos.org/centos/6/os/x86_64" --extra-args="text console=com1 utf8 console=hvc0"

(Install Method #2 Download and Build image)
http://xen.pablolibo.com/doku.php

http://wiki.xen.org/wiki/Xen_Configuration_File_Options
[root@Wall-eve images]# cat CentOS6_64.cfg
	kernel = "/boot_xen/vmlinuz-2.6.39.4.x86_64" 
	ramdisk = "/boot_xen/System.map-2.6.39.4.x86_64" 
	root = "/dev/xvda ro"
	name = "centos6_64" 
	memory = "1024" # 1Gb ram
	disk = [ 'file:/var/lib/xen/root.img,xvda,w', 'file:/var/lib/xen/swap.img,xvdb,w']
	vif = ['mac=00:16:3e:de:ad:be, bridge=xenbr1',]
	vcpus=1
	on_reboot = 'destroy'
	on_crash = 'destroy'

 xm create CentOS6_64.cfg
       Error: Device 0 (vif) could not be connected. Hotplug scripts not working.

[root@Wall-eve images]# xl create -c CentOS6_64.cfg
	Parsing config from CentOS6_64.cfg
	libxl: error: libxl_device.c:858:device_backend_callback: unable to disconnect device with path /local/domain/0/backend/vif/22/0
	libxl: error: libxl_create.c:1096:domcreate_attach_pci: unable to add nic devices
	libxl: error: libxl_device.c:858:device_backend_callback: unable to disconnect device with path /local/domain/0/backend/vif/22/0
	libxl: error: libxl.c:1465:devices_destroy_cb: libxl__devices_destroy failed for 22

((( This will work if you remove the vif )))

------------------------ HOW TO BUILD DOM U Domains --------------------------------
virt-install -d -n TestVM1 -r 512 --vcpus=1 --disk /var/lib/libvirt/images/TestVM1.img,size=8 --nographics -p -l "http://mirror.centos.org/centos/6/os/x86_64" --extra-args="text console=com1 utf8 console=hvc0"
Passwd: XenGuest
  -- May need to check MAC address /etc/sysconfig/network-scripts/ifcfg-eth0 --
  -- Set /etc/resolv.conf
  -- Set Hostname
service network restart
yum install yum-utils wget openssh-clients rpm-build vim
yum install postgresql postgresql-server postgresql-contrib

############### If need to build PG from scratch ###########################
# cd /tmp
# wget http://vault.centos.org/6.4/os/Source/SPackages/postgresql-8.4.13-1.el6_3.src.rpm
# rpm -i postgresql-8.4.13-1.el6_3.src.rpm
# yum install make gcc glibc-devel bison flex autoconf perl perl-devel python-devel tcl tcl-devel  readline-devel zlib-devel openssl-devel krb5-devel openldap-devel gettext uuid-devel libxml2-devel libxslt-devel pam-devel systemtap-sdt-devel perl-ExtUtils-Embed
# cd /root/rpmbuild/SPECS
# rpmbuild -ba postgresql.spec
# cd /root/rpmbuild/RPMS/x86_64
# rpm -ivh postgresql*.rpm
############### If need to build PG from scratch ###########################

pgbench --version
     pgbench (PostgreSQL) 8.4.13

su - postgres
echo $PGDATA
/var/lib/pgsql/data

initdb
---- SET SOME DB CONFIGURATIONS... ------
 SHARED_BUFFERS="256MB"
 WAL_BUFFERS="16MB"
 CHECKPOINT_SEGMENTS="16"
 echo \# Changes for pgbench testing >> $PGDATA/postgresql.conf
 echo shared_buffers=$SHARED_BUFFERS >> $PGDATA/postgresql.conf
 echo wal_buffers=$WAL_BUFFERS >> $PGDATA/postgresql.conf
 echo checkpoint_segments=$CHECKPOINT_SEGMENTS >> $PGDATA/postgresql.conf
 pg_ctl start

------ Create the database ------
createdb pgbench
--- RUN TESTS !!!!----------------------

------------------------ HOW TO CLONE DOM U -------------------------------
  --- Disk Image:  /var/lib/libvirt/images/TestVM1.img
virsh suspend TestVM1
cd /var/lib/libvirt/images
cp TestVM1.img TestVM2.img
virsh resume TestVM1

cd /tmp/Xen
virsh dumpxml TestVM1 > /tmp/Xen/TestVM1.xml
cp /tmp/Xen/TestVM1.xml /tmp/Xen/TestVM2.xml
  --- Edit uuid, name, source file, domain id, and mac address ---
virsh create /tmp/Xen/TestVM2.xml
xm console TestVM2
  -- May need to check MAC address /etc/sysconfig/network-scripts/ifcfg-eth0 --
service network restart
service postgresql start
su - postgres
/tmp/getScaleFactor2 > /tmp/IBM3650_ScaleF_512_TestVM2_run1.txt
scp /tmp/IBM3650_ScaleF_512_TestVM4_run1.txt deron@172.29.203.30:Projects/XenAnalyze/data


------------------------ How to Build XenStore tools for DomU ------------------------------------
yum install gcc
## Taken from here:  http://silviud.blogspot.com/2011/09/from-domu-read-xenstore-ec2-linode-etc.html
1. wget http://bits.xensource.com/oss-xen/release/4.1.1/xen-4.1.1.tar.gz

2. tar xvfz xen-4.1.1.tar.gz

3. cd xen-4.1.1/tools

4. make -C include

5. cd misc

6. make xen-detect

7. install xen-detect /usr/local/bin

8. cd ../xenstore

9. Build client library and programs:
  make clients

10. Install client library and programs:
  install libxenstore.so.3.0 /usr/local/lib
  install xenstore xenstore-control /usr/local/bin
  cd /usr/local/bin
  ln xenstore xenstore-chmod
  ln xenstore xenstore-exists
  ln xenstore xenstore-list
  ln xenstore xenstore-ls
  ln xenstore xenstore-read
  ln xenstore xenstore-rm
  ln xenstore xenstore-write

## Mount the xenfs - TODO add to /etc/fstab ##
mount -t xenfs none /proc/xen

Usage
-----

1. Set required environment variable:
  export XENSTORED_PATH=/proc/xen/xenbus -- Linux
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib

2. Now you can do things such as:
  xen-detect
  xenstore-ls device
  xenstore-ls -f /local/domain/0/backend/vif/11/0
  xenstore-read name


------------------------ HOW TO CLONE DOM U -------------------------------
  --- Disk Image:  /var/lib/libvirt/images/TestVM1.img
virsh suspend TestVM1
cd /var/lib/libvirt/images
cp TestVM1.img TestVM2.img
virsh resume TestVM1

mkdir /tmp/Xen
cd /tmp/Xen
virsh dumpxml TestVM1 > /tmp/Xen/TestVM1.xml
cp /tmp/Xen/TestVM1.xml /tmp/Xen/TestVM2.xml
  --- Edit uuid, name, source file, domain id, and mac address ---
virsh create /tmp/Xen/TestVM2.xml
xm console TestVM2
  -- Set Hostname
  -- May need to check MAC address /etc/sysconfig/network-scripts/ifcfg-eth0 --
service network restart
service postgresql start
su - postgres
/tmp/getScaleFactor2 > /tmp/IBM3650_ScaleF_512_TestVM2_run1.txt
scp /tmp/IBM3650_ScaleF_512_TestVM4_run1.txt deron@172.29.203.30:Projects/XenAnalyze/data

--- Run on all 4 guests concurrently ----
/tmp/getScaleFactor2 > /tmp/IBM3650_Concurrent_512_TestVM1.txt
/tmp/getScaleFactor2 > /tmp/IBM3650_Concurrent_512_TestVM2.txt
/tmp/getScaleFactor2 > /tmp/IBM3650_Concurrent_512_TestVM3.txt
/tmp/getScaleFactor2 > /tmp/IBM3650_Concurrent_512_TestVM4.txt
scp /tmp/IBM3650_Concurrent_512_TestVM?.txt deron@172.29.203.30:Projects/XenAnalyze/data

----------------------- Change Memory (example 2GB) --------------------------
TestVM="TestVM1"
virsh shutdown $TestVM
virsh setmaxmem $TestVM 2097152 
xm mem-set $TestVM 2048
virsh dumpxml $TestVM > /tmp/Xen/${TestVM}.xml
virsh destroy $TestVM
virsh create /tmp/Xen/${TestVM}.xml

--------------------- Configure Bonnie++ and IO tools -------------------
http://wiki.centos.org/AdditionalResources/Repositories/RPMForge
wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm
rpm -ivh rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm
rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
-------------------------------------------------------------------------


